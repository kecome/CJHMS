<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.homework.mapper.HomeworkMapper">
    <resultMap id="homeworkResultMap" type="Homework">
        <id property="id" column="id" />
        <result property="teacherId" column="teacherId"/>
        <result property="subjectId" column="subjectId"/>
        <result property="title" column="title"/>
        <result property="knowledge" column="knowledge"/>
        <result property="spentTime" column="spentTime"/>
        <result property="status" column="status"/>
        <result property="publicTime" column="publicTime"/>
        <result property="endTime" column="endTime"/>
        <result property="created" column="created"/>
        <result property="updated" column="updated"/>
    </resultMap>

    <sql id="homeworkList">
        <trim prefix="where" prefixOverrides="and | or">
            <if test="teacherId != null">
                and teacherId = #{teacherId}
            </if>
            <!--<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(title)">-->
                <!--and title = #{title}-->
            <!--</if>-->
            <if test="ids != null and ids.size() > 0">
               and id in <foreach  item="item" collection="ids" index="index"  open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </sql>

    <select id="selectHomeworkList" parameterType="com.homework.param.HomeworkParam" resultType="Homework">
        <bind name="orderSql" value="@com.homework.util.Pretreatment@getOrder(order)"/>
        select * from homework
        <include refid="homeworkList" />
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(orderSql)">
            order by
            ${orderSql}
        </if>
        <if test="isPage">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" parameterType="com.homework.param.HomeworkParam" resultType="Long">
        select count(id) from homework
        <include refid="homeworkList" />
    </select>

    <update id="updateHomework" parameterType="Homework">
        <bind name="sysDate" value="@com.homework.util.Pretreatment@now()"></bind>
        update homework
        <trim prefix="set" suffixOverrides="," suffix=" where id = #{id} ">
            updated = #{sysDate},
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(title)">
                title=#{title},
            </if>
            <if test="subjectId != null">
                subjectId=#{subjectId},
            </if>
            <if test="spentTime != null">
                spentTime=#{spentTime},
            </if>
            <if test="publicTime != null">
                publicTime=#{publicTime},
            </if>
            <if test="endTime != null">
                endTime=#{endTime},
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(knowledge)">
                knowledge=#{knowledge},
            </if>
        </trim>
    </update>

    <update id="updateStatus">
        <!--  update homework set updated = now(),status=1 where date_format(publicTime, '%Y-%m-%d %H:%i')=date_format(NOW(), '%Y-%m-%d %H:%i')-->
        <bind name="sysDate" value="@com.homework.util.Pretreatment@now()"></bind>
        update homework set updated = #{sysDate},status=1 where date_format(publicTime, '%Y-%m-%d %H:%i')=date_format(#{sysDate}, '%Y-%m-%d %H:%i')
    </update>

    <insert id="insertHomework" parameterType="com.homework.model.Homework">
        <bind name="sysDate" value="@com.homework.util.Pretreatment@now()" />
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            <bind name="nextId" value="@com.homework.util.Pretreatment@nextId()" />
            select #{nextId}
        </selectKey>
        insert into homework
              (id,teacherId,subjectId,title,knowledge,spentTime,status,publicTime,endTime, created, updated)
        values(#{id},#{teacherId},#{subjectId},#{title},#{knowledge},#{spentTime},#{status},#{publicTime},#{endTime},#{sysDate},#{sysDate})
    </insert>

</mapper>