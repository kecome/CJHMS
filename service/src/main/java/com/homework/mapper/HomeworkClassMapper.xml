<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.homework.mapper.HomeworkClassMapper">
    <resultMap id="homeworkClassResultMap" type="HomeworkClass">
        <id property="id" column="id" />
        <result property="homeworkId" column="homeworkId"/>
        <result property="classId" column="classId"/>
        <result property="created" column="created"/>
        <result property="updated" column="updated"/>
    </resultMap>

    <sql id="homeworkClassList">
        <trim prefix="where" prefixOverrides="and | or">
            <if test="homeworkId != null">
                and homeworkId = #{homeworkId}
            </if>
            <if test="classId != null">
                and classId = #{classId}
            </if>
            <if test="teacherId != null">
                and teacherId = #{teacherId}
            </if>
        </trim>
    </sql>

    <select id="selectClassList" parameterType="com.homework.param.HomeworkClassParam" resultType="HomeworkClass">
        <bind name="orderSql" value="@com.homework.util.Pretreatment@getOrder(order)"/>
        select c.* from homework_class c left join homework h on h.id = c.homeworkId
        <include refid="homeworkClassList" />
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(orderSql)">
            order by
            #{orderSql}
        </if>
        <if test="isPage">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" parameterType="com.homework.param.HomeworkClassParam" resultType="Integer">
        select count(id) from homework_class
        <include refid="homeworkClassList" />
    </select>

    <sql id="classHomeworkList">
        from homework h LEFT JOIN homework_class c on h.id = c.homeworkId
        <trim prefix="where" prefixOverrides="and | or">
            <if test="homeworkId != null">
                and h.id = #{homeworkId}
            </if>
            <if test="classId != null">
                and c.classId = #{classId}
            </if>
            <if test="teacherId != null">
                and h.teacherId = #{teacherId}
            </if>
            <if test="publicTime != null">
                and date_format(h.publicTime, "%Y-%m-%d") = date_format(#{publicTime}, "%Y-%m-%d")
            </if>
        </trim>
        GROUP BY h.id
    </sql>

    <select id="selectClassHomework" parameterType="com.homework.param.HomeworkClassParam" resultType="com.homework.data.ClassHomework">
        <bind name="orderSql" value="@com.homework.util.Pretreatment@getOrder(order)"/>
        select
          h.*
        <include refid="classHomeworkList"/>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(orderSql)">
            order by
            ${orderSql}
        </if>
        <if test="isPage">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="countClassHomework" parameterType="com.homework.param.HomeworkClassParam" resultType="Integer">
       select count(*) from ( select h.id
        <include refid="classHomeworkList"/>
        ) t
    </select>

    <select id="selectList" parameterType="Long" resultType="HomeworkClass">
    select
	   h.*,
	  (select count(*) from studentwork s where s.classId = h.classId and h.homeworkId=s.homeworkId and s.submit = 1) as submitCount,
	  (select count(*) from studentwork s where s.classId = h.classId and h.homeworkId=s.homeworkId and s.mark = 1) as markCount,
	  (select count(*) from studentwork s where s.classId = h.classId and h.homeworkId=s.homeworkId) as count
    from homework_class h where homeworkId = #{id}
    </select>

    <select id="selectClassId" parameterType="Long" resultType="Long">
        select classId from homework_class where homeworkId = #{homeworkId}
    </select>

    <insert id="insertHomeworkClass" useGeneratedKeys="true" keyProperty="id" parameterType="com.homework.model.HomeworkClass">
        <bind name="sysDate" value="@com.homework.util.Pretreatment@now()" />
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            <bind name="nextId" value="@com.homework.util.Pretreatment@nextId()" />
            select #{nextId}
        </selectKey>
        insert into homework_class
        (id,homeworkId,classId,className,created, updated)
        values(#{id},#{homeworkId},#{classId},#{className},#{sysDate},#{sysDate})
    </insert>
    <delete id="deleteHomeworkClass" parameterType="Long">
        delete from homework_class where homeworkId = #{homeworkId}
    </delete>
</mapper>