<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.homework.mapper.QuestionMapper">
    <resultMap id="questionResultMap" type="Question">
        <id property="id" column="id" />
        <result property="homeworkId" column="homeworkId"/>
        <result property="type" column="type"/>
        <result property="title" column="title" typeHandler="com.homework.typehandlers.BlobStringTypeHandler"/>
        <result property="seq" column="seq"/>
        <result property="answer" column="answer"/>
        <result property="item" column="item"/>
        <result property="created" column="created"/>
        <result property="updated" column="updated"/>
    </resultMap>

    <sql id="questionList">
        <trim prefix="where" prefixOverrides="and | or">
            <if test="homeworkId != null">
                and homeworkId = #{homeworkId}
            </if>
        </trim>
    </sql>

    <select id="selectQuestionList" parameterType="com.homework.param.QuestionParam" resultMap="questionResultMap">
        <bind name="orderSql" value="@com.homework.util.Pretreatment@getOrder(order)"/>
        select * from question
        <include refid="questionList" />
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(orderSql)">
            order by
            ${orderSql}
        </if>
        <if test="isPage">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" parameterType="com.homework.param.QuestionParam" resultType="Integer">
        select count(id) from question
        <include refid="questionList" />
    </select>

    <update id="updateQuestion" parameterType="Question">
        <bind name="sysDate" value="@com.homework.util.Pretreatment@now()"></bind>
        update question
        <trim prefix="set" suffixOverrides="," suffix=" where id = #{id} ">
            updated = #{sysDate},
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(title)">
                title=#{title},
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(answer)">
                answer=#{answer},
            </if>
        </trim>
    </update>

    <insert id="insertQuestion" parameterType="com.homework.model.Question">
        <bind name="sysDate" value="@com.homework.util.Pretreatment@now()" />
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            <bind name="nextId" value="@com.homework.util.Pretreatment@nextId()" />
            select #{nextId}
        </selectKey>
        insert into question
            (id,homeworkId,type,title,seq,answer,item,created, updated)
        values(#{id},#{homeworkId}, #{type},#{title},#{seq},#{answer},#{item},#{sysDate},#{sysDate})
    </insert>

    <delete id="deleteQuestion" parameterType="Long">
        delete from question where homeworkId = #{homeworkId}
    </delete>
    <select id="selectList" parameterType="com.homework.param.QuestionParam" resultType="Question">
        select * from question where homeworkId = #{homeworkId}
        <if test="type != null">
            and type = #{type}
        </if>
    </select>
    <select id="selectListInnerAnswer" parameterType="com.homework.param.QuestionParam" resultType="Question">
        SELECT q.* FROM `question` q INNER JOIN studentanswer s on q.id = s.questionId where q.homeworkId = #{homeworkId}
        <if test="studentId != null">
            and s.studentId = #{studentId}
        </if>
        <if test="type != null">
            and q.type = #{type}
        </if>
        group by q.id
    </select>
    <select id="selectQuestionNoAnswer" parameterType="com.homework.param.QuestionParam" resultType="Question">
        select * from question q where q.homeworkId = #{homeworkId} and q.id not in
        (select s.questionId as id from studentanswer s left join question q on s.questionId=q.id where s.studentId = #{studentId} and q.homeworkId = #{homeworkId})
    </select>
</mapper>